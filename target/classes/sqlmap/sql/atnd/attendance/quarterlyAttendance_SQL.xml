<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="quarterlyAttendance">

<resultMap id="quarterlyAttendanceResultMapAvgStartTime" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result column="EMP_ID" property="empId" />  
    <result column="AVG_START_TIME" property="avgStartTime" />
</resultMap>

<resultMap id="quarterlyAttendanceResultMapAvgEndTime" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result column="EMP_ID" property="empId" />  
    <result column="AVG_END_TIME" property="avgEndTime" />
</resultMap>

<resultMap id="quarterlyAttendanceResultMapTotalWorkHour" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result column="EMP_ID" property="empId" />  
    <result column="TTL_WORK_HOUR" property="ttlWorkHour" />
</resultMap>

<resultMap id="quarterlyAttendanceResultMapTotalLate" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result column="EMP_ID" property="empId" />
    <result column="TTL_LATE" property="ttlLate" />
</resultMap>

<resultMap id="quarterlyAttendanceResultMapTotalLateness" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result column="EMP_ID" property="empId" />
    <result column="TTL_LATENESS" property="ttlLateness" />
</resultMap>

<resultMap id="quarterlyAttendanceResultMapTotalOutsideWork" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result column="EMP_ID" property="empId" />
    <result column="TTL_OUTSIDE_WORK" property="ttlOutsideWork" />
</resultMap>

<resultMap id="quarterlyAttendanceResultMapTotalBusinessTrip" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result column="EMP_ID" property="empId" />
    <result column="TTL_BUSINESS_TRIP" property="ttlBusinessTrip" />
</resultMap>

<resultMap id="quarterlyAttendanceResultMapTotalTraining" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result column="EMP_ID" property="empId" />
    <result column="TTL_TRAINING" property="ttlTraining" />
</resultMap>

<resultMap id="quarterlyAttendanceResultMapTotalOverTime" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result column="EMP_ID" property="empId" />
    <result column="TTL_OVER_TIME" property="ttlOverTime" />
</resultMap>

<resultMap id="quarterlyAttendanceResultMapAvgStatus" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result column="EMP_ID" property="empId" />
    <result column="AVG_STATUS" property="avgStatus" />
</resultMap>

<resultMap id="quarterlyAttendanceResultMapTotalAew" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result column="EMP_ID" property="empId" />
    <result column="TTL_AEW" property="ttlAew" />
</resultMap>


<resultMap id="quarterlyAttendanceResultMap" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result property="empId" column="EMP_ID" />
    <result property="year" column="YEAR" />

    <result property="quarter" column="QUARTER" />
    <result property="avgStartTime" column="AVG_START_TIME" />
    <result property="avgEndTime" column="AVG_END_TIME" />
    <result property="ttlWorkHour" column="TTL_WORK_HOUR" />
    <result property="ttlLateness" column="TTL_LATENESS" />
    <result property="ttlLate" column="TTL_LATE" />
    <result property="ttlOverTime" column="TTL_OVER_TIME" />
    <result property="ttlOutsideWork" column="TTL_OUTSIDE_WORK" />
    <result property="ttlBusinessTrip" column="TTL_BUSINESS_TRIP" />
    <result property="ttlTraining" column="TTL_TRAINING" />
    <result property="ttlAew" column="TTL_AEW" />
    <result property="avgStatus" column="AVG_STATUS" />
</resultMap>



<insert id="insertQuarterlyAttendance" parameterClass="atnd.attendance.vo.AttendanceAggregateVO">
        INSERT INTO NTP1_QUARTERLY_ATND_MG (
        	qtr_atnd_no,
            emp_id,
            year,
            quarter,
            avg_start_time,
            avg_end_time,
            ttl_work_hour,
            ttl_lateness,
            ttl_late,
            ttl_over_time,
            ttl_outside_work,
            ttl_business_trip,
            ttl_training,
            ttl_aew,
            avg_status
        ) VALUES (
           (SELECT COALESCE(MAX(QTR_ATND_NO), 0) + 1 FROM NTP1_QUARTERLY_ATND_MG),
            #empId#,
            #year#,
            #quarter#,
            #avgStartTime#,
            #avgEndTime#,
            #ttlWorkHour#,
            #ttlLateness#,
            #ttlLate#,
            #ttlOverTime#,
            #ttlOutsideWork#,
            #ttlBusinessTrip#,
            #ttlTraining#,
            #ttlAew#,
            #avgStatus#
        )
    </insert>



<select id="generateQuarterlyAttendance" resultMap="quarterlyAttendanceResultMap">
    SELECT
	    EMP_ID,
	    YEAR,
	    QUARTER,
	    LPAD(FLOOR(AVG((SUBSTR(AVG_START_TIME, 1, 2)) * 60 + (SUBSTR(AVG_START_TIME, 4, 2))) / 60), 2, '0') || ':' ||
	    LPAD(MOD(AVG((SUBSTR(AVG_START_TIME, 1, 2)) * 60 + (SUBSTR(AVG_START_TIME, 4, 2))), 60), 2, '0') AS AVG_START_TIME,
	    LPAD(FLOOR(AVG((SUBSTR(AVG_END_TIME, 1, 2)) * 60 + (SUBSTR(AVG_END_TIME, 4, 2))) / 60), 2, '0') || ':' ||
	    LPAD(MOD(AVG((SUBSTR(AVG_END_TIME, 1, 2)) * 60 + (SUBSTR(AVG_END_TIME, 4, 2))), 60), 2, '0') AS AVG_END_TIME,
	    SUM(TTL_WORK_HOUR) AS TTL_WORK_HOUR,
	    SUM(TTL_LATENESS) AS TTL_LATENESS,
	    SUM(TTL_LATE) AS TTL_LATE,
	    SUM(TTL_OVER_TIME) AS TTL_OVER_TIME,
	    SUM(TTL_OUTSIDE_WORK) AS TTL_OUTSIDE_WORK,
	    SUM(TTL_BUSINESS_TRIP) AS TTL_BUSINESS_TRIP,
	    SUM(TTL_TRAINING) AS TTL_TRAINING,
	    SUM(TTL_AEW) AS TTL_AEW,
	    AVG(AVG_STATUS) AS AVG_STATUS
	FROM
	    (SELECT
	        EMP_ID,
	        YEAR,
	        CASE
	            WHEN MONTH BETWEEN 1 AND 3 THEN 1
	            WHEN MONTH BETWEEN 4 AND 6 THEN 2
	            WHEN MONTH BETWEEN 7 AND 9 THEN 3
	            WHEN MONTH BETWEEN 10 AND 12 THEN 4
	        END AS QUARTER,
	        AVG_START_TIME,
	        AVG_END_TIME,
	        TTL_WORK_HOUR,
	        TTL_LATENESS,
	        TTL_LATE,
	        TTL_OVER_TIME,
	        TTL_OUTSIDE_WORK,
	        TTL_BUSINESS_TRIP,
	        TTL_TRAINING,
	        TTL_AEW,
	        AVG_STATUS
	    FROM NTP1_MONTHLY_ATND_MG)
	GROUP BY EMP_ID, YEAR, QUARTER

</select>



<insert id="insertQuarterlyAverageAttendance" parameterClass="atnd.attendance.vo.AttendanceAggregateVO">
    INSERT INTO NTP1_QUARTERLY_ATND_MG (
        EMP_ID, QTR_ATND_NO, YEAR, QUARTER, AVG_START_TIME, AVG_END_TIME,
        TTL_WORK_HOUR, TTL_LATENESS, TTL_LATE, TTL_OVER_TIME, TTL_OUTSIDE_WORK,
        TTL_BUSINESS_TRIP, TTL_TRAINING, TTL_AEW, AVG_STATUS
    ) VALUES (
        #empId#, (SELECT COALESCE(MAX(QTR_ATND_NO), 0) + 1 FROM NTP1_QUARTERLY_ATND_MG),
        #year#, #quarter#, #avgStartTime#, #avgEndTime#,
        #ttlWorkHour#, #ttlLateness#, #ttlLate#, #ttlOverTime#, #ttlOutsideWork#,
        #ttlBusinessTrip#, #ttlTraining#, #ttlAew#, #avgStatus#
    )
</insert>



<!-- Query for Average Start Time -->
<select id="getLatestDataByColumn_AVG_START_TIME" resultMap="quarterlyAttendanceResultMapAvgStartTime">
    SELECT a.EMP_ID, a.AVG_START_TIME
    FROM NTP1_QUARTERLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(QTR_ATND_NO) AS LatestQTR_ATND_NO
        FROM NTP1_QUARTERLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.QTR_ATND_NO = b.LatestQTR_ATND_NO
    WHERE a.AVG_START_TIME IS NOT NULL
</select>

<!-- Query for Average End Time -->
<select id="getLatestDataByColumn_AVG_END_TIME" resultMap="quarterlyAttendanceResultMapAvgEndTime">
    SELECT a.EMP_ID, a.AVG_END_TIME
    FROM NTP1_QUARTERLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(QTR_ATND_NO) AS LatestQTR_ATND_NO
        FROM NTP1_QUARTERLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.QTR_ATND_NO = b.LatestQTR_ATND_NO
    WHERE a.AVG_END_TIME IS NOT NULL
</select>

<!-- Query for Total Work Hour -->
<select id="getLatestDataByColumn_TOTAL_WORK_HOUR" resultMap="quarterlyAttendanceResultMapTotalWorkHour">
    SELECT a.EMP_ID, a.TTL_WORK_HOUR
    FROM NTP1_QUARTERLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(QTR_ATND_NO) AS LatestQTR_ATND_NO
        FROM NTP1_QUARTERLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.QTR_ATND_NO = b.LatestQTR_ATND_NO
    WHERE a.TTL_WORK_HOUR IS NOT NULL
</select>

<!-- Query for Total Late -->
<select id="getLatestDataByColumn_TOTAL_LATE" resultMap="quarterlyAttendanceResultMapTotalLate">
    SELECT a.EMP_ID, a.TTL_LATE
    FROM NTP1_QUARTERLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(QTR_ATND_NO) AS LatestQTR_ATND_NO
        FROM NTP1_QUARTERLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.QTR_ATND_NO = b.LatestQTR_ATND_NO
    WHERE a.TTL_LATE IS NOT NULL
</select>

<!-- Query for Total Lateness -->
<select id="getLatestDataByColumn_TOTAL_LATENESS" resultMap="quarterlyAttendanceResultMapTotalLateness">
    SELECT a.EMP_ID, a.TTL_LATENESS
    FROM NTP1_QUARTERLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(QTR_ATND_NO) AS LatestQTR_ATND_NO
        FROM NTP1_QUARTERLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.QTR_ATND_NO = b.LatestQTR_ATND_NO
    WHERE a.TTL_LATENESS IS NOT NULL
</select>

<!-- Query for Total Outside Work -->
<select id="getLatestDataByColumn_TOTAL_OUTSIDE_WORK" resultMap="quarterlyAttendanceResultMapTotalOutsideWork">
    SELECT a.EMP_ID, a.TTL_OUTSIDE_WORK
    FROM NTP1_QUARTERLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(QTR_ATND_NO) AS LatestQTR_ATND_NO
        FROM NTP1_QUARTERLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.QTR_ATND_NO = b.LatestQTR_ATND_NO
    WHERE a.TTL_OUTSIDE_WORK IS NOT NULL
</select>

<!-- Query for Total Business Trip -->
<select id="getLatestDataByColumn_TOTAL_BUSINESS_TRIP" resultMap="quarterlyAttendanceResultMapTotalBusinessTrip">
    SELECT a.EMP_ID, a.TTL_BUSINESS_TRIP
    FROM NTP1_QUARTERLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(QTR_ATND_NO) AS LatestQTR_ATND_NO
        FROM NTP1_QUARTERLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.QTR_ATND_NO = b.LatestQTR_ATND_NO
    WHERE a.TTL_BUSINESS_TRIP IS NOT NULL
</select>

<!-- Query for Total Training -->
<select id="getLatestDataByColumn_TOTAL_TRAINING" resultMap="quarterlyAttendanceResultMapTotalTraining">
    SELECT a.EMP_ID, a.TTL_TRAINING
    FROM NTP1_QUARTERLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(QTR_ATND_NO) AS LatestQTR_ATND_NO
        FROM NTP1_QUARTERLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.QTR_ATND_NO = b.LatestQTR_ATND_NO
    WHERE a.TTL_TRAINING IS NOT NULL
</select>

<!-- Query for Total Overtime -->
<select id="getLatestDataByColumn_TOTAL_OVERTIME" resultMap="quarterlyAttendanceResultMapTotalOverTime">
    SELECT a.EMP_ID, a.TTL_OVER_TIME
    FROM NTP1_QUARTERLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(QTR_ATND_NO) AS LatestQTR_ATND_NO
        FROM NTP1_QUARTERLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.QTR_ATND_NO = b.LatestQTR_ATND_NO
    WHERE a.TTL_OVER_TIME IS NOT NULL
</select>

<!-- Query for Average Status -->
<select id="getLatestDataByColumn_AVG_STATUS" resultMap="quarterlyAttendanceResultMapAvgStatus">
    SELECT a.EMP_ID, a.AVG_STATUS
    FROM NTP1_QUARTERLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(QTR_ATND_NO) AS LatestQTR_ATND_NO
        FROM NTP1_QUARTERLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.QTR_ATND_NO = b.LatestQTR_ATND_NO
    WHERE a.AVG_STATUS IS NOT NULL
</select>

<!-- Query for Total AEW -->
<select id="getLatestDataByColumn_TOTAL_AEW" resultMap="quarterlyAttendanceResultMapTotalAew">
    SELECT a.EMP_ID, a.TTL_AEW
    FROM NTP1_QUARTERLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(QTR_ATND_NO) AS LatestQTR_ATND_NO
        FROM NTP1_QUARTERLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.QTR_ATND_NO = b.LatestQTR_ATND_NO
    WHERE a.TTL_AEW IS NOT NULL
</select>

</sqlMap>