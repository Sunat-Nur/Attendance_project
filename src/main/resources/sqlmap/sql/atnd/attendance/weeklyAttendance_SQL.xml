<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="weeklyAttendance">

<resultMap id="weeklyAttendanceResultMapAvgStartTime" class="atnd.attendance.vo.AttendanceAggregateVO">
<result column="EMP_ID" property="empId" />  
    <result column="AVG_START_TIME" property="avgStartTime" />
</resultMap>
<resultMap id="weeklyAttendanceResultMapAvgEndTime" class="atnd.attendance.vo.AttendanceAggregateVO">
<result column="EMP_ID" property="empId" />  
    <result column="AVG_END_TIME" property="avgEndTime" />
</resultMap>
<resultMap id="weeklyAttendanceResultMapTotalWorkHour" class="atnd.attendance.vo.AttendanceAggregateVO">
<result column="EMP_ID" property="empId" />  
    <result column="TTL_WORK_HOUR" property="ttlWorkHour" />
</resultMap>
<resultMap id="weeklyAttendanceResultMapTotalLate" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result column="EMP_ID" property="empId" />
    <result column="TTL_LATE" property="ttlLate" />
</resultMap>
<resultMap id="weeklyAttendanceResultMapTotalLateness" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result property="empId" column="EMP_ID" />
    <result property="ttlLateness" column="TTL_LATENESS" />
</resultMap>
<resultMap id="weeklyAttendanceResultMapTotalOutsideWork" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result property="empId" column="EMP_ID" />
    <result property="ttlOutsideWork" column="TTL_OUTSIDE_WORK" />
</resultMap>
<resultMap id="weeklyAttendanceResultMapTotalBusinessTrip" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result property="empId" column="EMP_ID" />
    <result property="ttlBusinessTrip" column="TTL_BUSINESS_TRIP" />
</resultMap>
<resultMap id="weeklyAttendanceResultMapTotalTraining" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result property="empId" column="EMP_ID" />
    <result property="ttlTraining" column="TTL_TRAINING" />
</resultMap>
<resultMap id="weeklyAttendanceResultMapTotalOverTime" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result property="empId" column="EMP_ID" />
    <result property="ttlOverTime" column="TTL_OVER_TIME" />
</resultMap>

<resultMap id="weeklyAttendanceResultMapAvgStatus" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result property="empId" column="EMP_ID" />
    <result property="avgStatus" column="AVG_STATUS" />
</resultMap>
<resultMap id="weeklyAttendanceResultMapTotalAew" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result property="empId" column="EMP_ID" />
    <result property="ttlAew" column="TTL_AEW" />
</resultMap>

<resultMap id="last5daysAttendanceResultMapAvgStartTime" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result column="EMP_ID" property="empId" />
    <result column="AVG_START_TIME" property="avgStartTime" />
</resultMap>

<resultMap id="last5daysAttendanceResultMapAvgEndTime" class="atnd.attendance.vo.AttendanceAggregateVO">
    <result column="EMP_ID" property="empId" />
    <result column="AVG_END_TIME" property="avgEndTime" />
</resultMap>

<resultMap id="last5daysAttendanceResultMapTotalLate" class="atnd.attendance.vo.AttendanceAggregateVO">
  <result column="EMP_ID" property="empId" />
  <result column="TOTAL_LATE" property="ttlLate" />
</resultMap>

<resultMap id="last5daysAttendanceResultMapTotalLateness" class="atnd.attendance.vo.AttendanceAggregateVO">
  <result column="EMP_ID" property="empId" />
  <result column="TOTAL_LATENESS" property="ttlLateness" />
</resultMap>


<resultMap id="last5daysAttendanceResultMapTotalOutsideWork" class="atnd.attendance.vo.AttendanceAggregateVO">
  <result column="EMP_ID" property="empId" />
  <result column="TOTAL_OUTSIDE_WORK" property="ttlOutsideWork" />
</resultMap>

<resultMap id="last5daysAttendanceResultMapTotalBusinessTrip" class="atnd.attendance.vo.AttendanceAggregateVO">
  <result column="EMP_ID" property="empId" />
  <result column="TOTAL_BUSINESS_TRIP" property="ttlBusinessTrip" />
</resultMap>

<resultMap id="last5daysAttendanceResultMapTotalTraining" class="atnd.attendance.vo.AttendanceAggregateVO">
  <result column="EMP_ID" property="empId" />
  <result column="TOTAL_TRAINING" property="ttlTraining" />
</resultMap>
<resultMap id="last5daysAttendanceResultMapTotalOvertime" class="atnd.attendance.vo.AttendanceAggregateVO">
  <result column="EMP_ID" property="empId" />
  <result column="TOTAL_OVER_TIME" property="ttlOverTime" />
</resultMap>
<resultMap id="last5daysAttendanceResultMapTotalWorkHour" class="atnd.attendance.vo.AttendanceAggregateVO">
  <result column="EMP_ID" property="empId" />
  <result column="TOTAL_WORK_HOUR" property="ttlWorkHour" />
</resultMap>
<resultMap id="last5daysAttendanceResultMapTotalAew" class="atnd.attendance.vo.AttendanceAggregateVO">
  <result column="EMP_ID" property="empId" />
  <result column="TOTAL_AEW" property="ttlAew" />
</resultMap>
<resultMap id="last5daysAttendanceResultMapAvgStatus" class="atnd.attendance.vo.AttendanceAggregateVO">
  <result column="EMP_ID" property="empId" />
  <result column="AVG_STATUS" property="avgStatus" />
</resultMap>

<resultMap id="generateWeeklyAttendanceAggregateResultMap" class="atnd.attendance.vo.AttendanceAggregateVO">
<result property="empId" column="EMP_ID"/>
    <result property="startDate" column="start_date" />
    <result property="endDate" column="end_date" />
   
    <result property="avgStartTime" column="avg_start_time" />
    <result property="avgEndTime" column="avg_end_time" />
    <result property="avgStatus" column="avg_status" />
    <result property="ttlLate" column="total_late" />
    <result property="ttlLateness" column="total_lateness" />
    <result property="ttlOutsideWork" column="total_outside_work" />
    <result property="ttlBusinessTrip" column="total_business_trip" />
    <result property="ttlTraining" column="total_training" />
    <result property="ttlOverTime" column="total_overtime" />
    <result property="ttlWorkHour" column="total_workhour" />
    <result property="ttlAew" column="total_aew" />
</resultMap>



<insert id="insertWeeklyAttendance" parameterClass="atnd.attendance.vo.AttendanceAggregateVO">
        INSERT INTO NTP1_WEEKLY_ATND_MG (
        	wk_atnd_no,
            emp_id,
            start_date,
            end_date,
            avg_start_time,
            avg_end_time,
            ttl_work_hour,
            ttl_lateness,
            ttl_late,
            ttl_over_time,
            ttl_outside_work,
            ttl_business_trip,
            ttl_training,
            ttl_aew,
            avg_status
        ) VALUES (
           (SELECT COALESCE(MAX(WK_ATND_NO), 0) + 1 FROM NTP1_WEEKLY_ATND_MG),
            #empId#,
            #startDate#,
            #endDate#,
            #avgStartTime#,
            #avgEndTime#,
            #ttlWorkHour#,
            #ttlLateness#,
            #ttlLate#,
            #ttlOverTime#,
            #ttlOutsideWork#,
            #ttlBusinessTrip#,
            #ttlTraining#,
            #ttlAew#,
            #avgStatus#
        )
    </insert>

<select id="generateMonthlyAttendance" resultMap="generateWeeklyAttendanceAggregateResultMap">
<![CDATA[
    WITH WeekRange AS (
        SELECT
            TRUNC(SYSDATE - 7, 'IW') AS start_date,
            TRUNC(SYSDATE, 'IW') - INTERVAL '1' SECOND AS end_date
        FROM dual
    ),
    DailyData AS (
        SELECT
            a.EMP_ID,
            b.start_date,
            b.end_date,
            (TO_NUMBER(TO_CHAR(a.START_TIME, 'HH24')) * 60 + TO_NUMBER(TO_CHAR(a.START_TIME, 'MI'))) AS START_TIME_MINUTES,
            (TO_NUMBER(TO_CHAR(a.END_TIME, 'HH24')) * 60 + TO_NUMBER(TO_CHAR(a.END_TIME, 'MI'))) AS END_TIME_MINUTES,
            a.STATUS,
            CASE WHEN a.LATE > 0 THEN 1 ELSE 0 END AS IS_LATE,
            a.LATENESS,
            a.OUTSIDE_WORK,
            a.BUSINESS_TRIP,
            a.TRAINING,
            a.OVER_TIME,
            a.WORK_HOUR,
            a.AEW
        FROM
            NTP1_DAILY_ATND_MG a, WeekRange b
        WHERE
            a.START_TIME BETWEEN b.start_date AND b.end_date
    ),
    AggregatedData AS (
        SELECT
            EMP_ID,
            MIN(start_date) AS start_date,
            MAX(end_date) AS end_date,
            AVG(START_TIME_MINUTES) AS AVG_START_TIME_MINUTES,
            AVG(END_TIME_MINUTES) AS AVG_END_TIME_MINUTES,
            ROUND(AVG(STATUS), 2) AS AVG_STATUS,
            SUM(IS_LATE) AS TOTAL_LATE,
            SUM(LATENESS) AS TOTAL_LATENESS,
            SUM(OUTSIDE_WORK) AS TOTAL_OUTSIDE_WORK,
            SUM(BUSINESS_TRIP) AS TOTAL_BUSINESS_TRIP,
            SUM(TRAINING) AS TOTAL_TRAINING,
            SUM(OVER_TIME) AS TOTAL_OVERTIME,
            SUM(WORK_HOUR) AS TOTAL_WORKHOUR,
            SUM(AEW) AS TOTAL_AEW
        FROM
            DailyData
        GROUP BY EMP_ID
    )
    SELECT
        EMP_ID,
        start_date,
        end_date,
        TO_CHAR(FLOOR(AVG_START_TIME_MINUTES / 60), 'FM00') || ':' || TO_CHAR(MOD(AVG_START_TIME_MINUTES, 60), 'FM00') AS AVG_START_TIME,
        TO_CHAR(FLOOR(AVG_END_TIME_MINUTES / 60), 'FM00') || ':' || TO_CHAR(MOD(AVG_END_TIME_MINUTES, 60), 'FM00') AS AVG_END_TIME,
        AVG_STATUS,
        TOTAL_LATE,
        TOTAL_LATENESS,
        TOTAL_OUTSIDE_WORK,
        TOTAL_BUSINESS_TRIP,
        TOTAL_TRAINING,
        TOTAL_OVERTIME,
        TOTAL_WORKHOUR,
        TOTAL_AEW
    FROM
        AggregatedData
]]>
</select>


<insert id="insertWeeklyAverageAttendance" parameterClass="atnd.attendance.vo.AttendanceAggregateVO">
    INSERT INTO NTP1_WEEKLY_ATND_MG (
        EMP_ID, WK_ATND_NO, START_DATE, END_DATE, AVG_START_TIME, AVG_END_TIME,
        TTL_WORK_HOUR, TTL_LATENESS, TTL_LATE, TTL_OVER_TIME, TTL_OUTSIDE_WORK,
        TTL_BUSINESS_TRIP, TTL_TRAINING, TTL_AEW, AVG_STATUS
    ) VALUES (
        #empId#, (SELECT COALESCE(MAX(WK_ATND_NO), 0) + 1 FROM NTP1_WEEKLY_ATND_MG WHERE EMP_ID = #empId#), #startDate#, #endDate#, #avgStartTime#, #avgEndTime#,
        #ttlWorkHour#, #ttlLateness#, #ttlLate#, #ttlOverTime#, #ttlOutsideWork#,
        #ttlBusinessTrip#, #ttlTraining#, #ttlAew#, #avgStatus#
    )
</insert>


  <select id="getLatestDataByColumn_AVG_START_TIME" resultMap="weeklyAttendanceResultMapAvgStartTime">
    SELECT a.EMP_ID, a.AVG_START_TIME
    FROM NTP1_WEEKLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(WK_ATND_NO) AS LatestWK_ATND_NO
        FROM NTP1_WEEKLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.WK_ATND_NO = b.LatestWK_ATND_NO
    WHERE a.AVG_START_TIME IS NOT NULL
   
</select>

<select id="getLatestDataByColumn_AVG_END_TIME" resultMap="weeklyAttendanceResultMapAvgEndTime">
    SELECT a.EMP_ID, a.AVG_END_TIME
    FROM NTP1_WEEKLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(WK_ATND_NO) AS LatestWK_ATND_NO
        FROM NTP1_WEEKLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.WK_ATND_NO = b.LatestWK_ATND_NO
    WHERE a.AVG_END_TIME IS NOT NULL
   
</select>

<select id="getLatestDataByColumn_TOTAL_WORK_HOUR" resultMap="weeklyAttendanceResultMapTotalWorkHour">
    SELECT a.EMP_ID, a.TTL_WORK_HOUR
    FROM NTP1_WEEKLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(WK_ATND_NO) AS LatestWK_ATND_NO
        FROM NTP1_WEEKLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.WK_ATND_NO = b.LatestWK_ATND_NO
    WHERE a.TTL_WORK_HOUR IS NOT NULL
   
</select>

<select id="getLatestDataByColumn_TOTAL_LATE" resultMap="weeklyAttendanceResultMapTotalLate">
    SELECT a.EMP_ID, a.TTL_LATE
    FROM NTP1_WEEKLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(WK_ATND_NO) AS LatestWK_ATND_NO
        FROM NTP1_WEEKLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.WK_ATND_NO = b.LatestWK_ATND_NO
    WHERE a.TTL_LATE IS NOT NULL
   
</select>

<select id="getLatestDataByColumn_TOTAL_LATENESS" resultMap="weeklyAttendanceResultMapTotalLateness">
    SELECT a.EMP_ID, a.TTL_LATENESS
    FROM NTP1_WEEKLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(WK_ATND_NO) AS LatestWK_ATND_NO
        FROM NTP1_WEEKLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.WK_ATND_NO = b.LatestWK_ATND_NO
    WHERE a.TTL_LATENESS IS NOT NULL
   
</select>

<select id="getLatestDataByColumn_TOTAL_OUTSIDE_WORK" resultMap="weeklyAttendanceResultMapTotalOutsideWork">
    SELECT a.EMP_ID, a.TTL_OUTSIDE_WORK
    FROM NTP1_WEEKLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(WK_ATND_NO) AS LatestWK_ATND_NO
        FROM NTP1_WEEKLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.WK_ATND_NO = b.LatestWK_ATND_NO
    WHERE a.TTL_OUTSIDE_WORK IS NOT NULL
   
</select>


<select id="getLatestDataByColumn_TOTAL_BUSINESS_TRIP" resultMap="weeklyAttendanceResultMapTotalBusinessTrip">
    SELECT a.EMP_ID, a.TTL_BUSINESS_TRIP
    FROM NTP1_WEEKLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(WK_ATND_NO) AS LatestWK_ATND_NO
        FROM NTP1_WEEKLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.WK_ATND_NO = b.LatestWK_ATND_NO
    WHERE a.TTL_BUSINESS_TRIP IS NOT NULL
   
</select>

<select id="getLatestDataByColumn_TOTAL_TRAINING" resultMap="weeklyAttendanceResultMapTotalTraining">
    SELECT a.EMP_ID, a.TTL_TRAINING
    FROM NTP1_WEEKLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(WK_ATND_NO) AS LatestWK_ATND_NO
        FROM NTP1_WEEKLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.WK_ATND_NO = b.LatestWK_ATND_NO
    WHERE a.TTL_TRAINING IS NOT NULL
   
</select>

<select id="getLatestDataByColumn_TOTAL_OVERTIME" resultMap="weeklyAttendanceResultMapTotalOverTime">
    SELECT a.EMP_ID, a.TTL_OVER_TIME
    FROM NTP1_WEEKLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(WK_ATND_NO) AS LatestWK_ATND_NO
        FROM NTP1_WEEKLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.WK_ATND_NO = b.LatestWK_ATND_NO
    WHERE a.TTL_OVER_TIME IS NOT NULL
   
</select>


<select id="getLatestDataByColumn_AVG_STATUS" resultMap="weeklyAttendanceResultMapAvgStatus">
    SELECT a.EMP_ID, a.AVG_STATUS
    FROM NTP1_WEEKLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(WK_ATND_NO) AS LatestWK_ATND_NO
        FROM NTP1_WEEKLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.WK_ATND_NO = b.LatestWK_ATND_NO
    WHERE a.AVG_STATUS IS NOT NULL
   
</select>

<select id="getLatestDataByColumn_TOTAL_AEW" resultMap="weeklyAttendanceResultMapTotalAew">
    SELECT a.EMP_ID, a.TTL_AEW
    FROM NTP1_WEEKLY_ATND_MG a
    INNER JOIN (
        SELECT EMP_ID, MAX(WK_ATND_NO) AS LatestWK_ATND_NO
        FROM NTP1_WEEKLY_ATND_MG
        GROUP BY EMP_ID
    ) b ON a.EMP_ID = b.EMP_ID AND a.WK_ATND_NO = b.LatestWK_ATND_NO
    WHERE a.TTL_AEW IS NOT NULL
   
</select>


<select id="getLatestDataByLast5Days_AVG_START_TIME" resultMap="last5daysAttendanceResultMapAvgStartTime">
    <![CDATA[
       WITH RankedEntries AS (
           SELECT
               EMP_ID,
               START_TIME,
               ROW_NUMBER() OVER (PARTITION BY EMP_ID ORDER BY START_TIME DESC) AS rn
           FROM
               NTP1_DAILY_ATND_MG
       ),
       ConvertedTimes AS (
           SELECT
               EMP_ID,
               (TO_NUMBER(TO_CHAR(START_TIME, 'HH24')) * 60 + TO_NUMBER(TO_CHAR(START_TIME, 'MI'))) AS TIME_IN_MINUTES,
               rn
           FROM
               RankedEntries
           WHERE rn <= 5
       ),
       AveragedTimes AS (
           SELECT
               EMP_ID,
               AVG(TIME_IN_MINUTES) AS AVG_TIME_IN_MINUTES
           FROM
               ConvertedTimes
           GROUP BY EMP_ID
       )
       SELECT
           EMP_ID,
           TO_CHAR(FLOOR(AVG_TIME_IN_MINUTES / 60), 'FM00') || ':' ||
           TO_CHAR(MOD(AVG_TIME_IN_MINUTES, 60), 'FM00') AS AVG_START_TIME
       FROM
           AveragedTimes
    ]]>
</select>



<select id="getLatestDataByLast5Days_AVG_END_TIME" resultMap="last5daysAttendanceResultMapAvgEndTime">
    <![CDATA[
       WITH RankedEntries AS (
           SELECT
               EMP_ID,
               END_TIME,
               ROW_NUMBER() OVER (PARTITION BY EMP_ID ORDER BY END_TIME DESC) AS rn
           FROM
               NTP1_DAILY_ATND_MG
       ),
       ConvertedTimes AS (
           SELECT
               EMP_ID,
               (TO_NUMBER(TO_CHAR(END_TIME, 'HH24')) * 60 + TO_NUMBER(TO_CHAR(END_TIME, 'MI'))) AS TIME_IN_MINUTES,
               rn
           FROM
               RankedEntries
           WHERE rn <= 5
       ),
       AveragedTimes AS (
           SELECT
               EMP_ID,
               AVG(TIME_IN_MINUTES) AS AVG_TIME_IN_MINUTES
           FROM
               ConvertedTimes
           GROUP BY EMP_ID
       )
       SELECT
           EMP_ID,
           TO_CHAR(FLOOR(AVG_TIME_IN_MINUTES / 60), 'FM00') || ':' ||
           TO_CHAR(MOD(AVG_TIME_IN_MINUTES, 60), 'FM00') AS AVG_END_TIME
       FROM
           AveragedTimes
    ]]>
</select>


<select id="getLatestDataByLast5Days_TOTAL_LATE" resultMap="last5daysAttendanceResultMapTotalLate">
     <![CDATA[
    SELECT
      EMP_ID,
      CASE
        WHEN COUNT(EMP_ID) >= 5 THEN SUM(LATE)
        ELSE NULL
      END AS TOTAL_LATE
    FROM
      (SELECT
         EMP_ID,
         LATE,
         ATND_NO,
         ROW_NUMBER() OVER (PARTITION BY EMP_ID ORDER BY ATND_NO DESC) as RN
       FROM
         NTP1_DAILY_ATND_MG)
    WHERE
      RN <= 5
    GROUP BY
      EMP_ID
  ]]>
</select>

<select id="getLatestDataByLast5Days_TOTAL_LATENESS" resultMap="last5daysAttendanceResultMapTotalLateness">
    <![CDATA[
    SELECT
      EMP_ID,
      CASE
        WHEN COUNT(EMP_ID) >= 5 THEN SUM(LATENESS)
        ELSE NULL
      END AS TOTAL_LATENESS
    FROM
      (SELECT
         EMP_ID,
         LATENESS,
         ATND_NO,
         ROW_NUMBER() OVER (PARTITION BY EMP_ID ORDER BY ATND_NO DESC) as RN
       FROM
         NTP1_DAILY_ATND_MG)
    WHERE
      RN <= 5
    GROUP BY
      EMP_ID
    ]]>
</select>


<select id="getLatestDataByLast5Days_TOTAL_OUTSIDE_WORK" resultMap="last5daysAttendanceResultMapTotalOutsideWork">
    <![CDATA[
    SELECT
      EMP_ID,
      CASE
        WHEN COUNT(EMP_ID) >= 5 THEN SUM(OUTSIDE_WORK)
        ELSE NULL
      END AS TOTAL_OUTSIDE_WORK
    FROM
      (SELECT
         EMP_ID,
         OUTSIDE_WORK,
         ATND_NO,
         ROW_NUMBER() OVER (PARTITION BY EMP_ID ORDER BY ATND_NO DESC) as RN
       FROM
         NTP1_DAILY_ATND_MG)
    WHERE
      RN <= 5
    GROUP BY
      EMP_ID
    ]]>
</select>


<select id="getLatestDataByLast5Days_TOTAL_BUSINESS_TRIP" resultMap="last5daysAttendanceResultMapTotalBusinessTrip">
    <![CDATA[
    SELECT
      EMP_ID,
      CASE
        WHEN COUNT(EMP_ID) >= 5 THEN SUM(BUSINESS_TRIP)
        ELSE NULL
      END AS TOTAL_BUSINESS_TRIP
    FROM
      (SELECT
         EMP_ID,
         BUSINESS_TRIP,
         ATND_NO,
         ROW_NUMBER() OVER (PARTITION BY EMP_ID ORDER BY ATND_NO DESC) as RN
       FROM
         NTP1_DAILY_ATND_MG)
    WHERE
      RN <= 5
    GROUP BY
      EMP_ID
    ]]>
</select>


<select id="getLatestDataByLast5Days_TOTAL_TRAINING" resultMap="last5daysAttendanceResultMapTotalTraining">
    <![CDATA[
    SELECT
      EMP_ID,
      CASE
        WHEN COUNT(EMP_ID) >= 5 THEN SUM(TRAINING)
        ELSE NULL
      END AS TOTAL_TRAINING
    FROM
      (SELECT
         EMP_ID,
         TRAINING,
         ATND_NO,
         ROW_NUMBER() OVER (PARTITION BY EMP_ID ORDER BY ATND_NO DESC) as RN
       FROM
         NTP1_DAILY_ATND_MG)
    WHERE
      RN <= 5
    GROUP BY
      EMP_ID
    ]]>
</select>


<select id="getLatestDataByLast5Days_TOTAL_OVERTIME" resultMap="last5daysAttendanceResultMapTotalOvertime">
    <![CDATA[
    SELECT
      EMP_ID,
      CASE
        WHEN COUNT(EMP_ID) >= 5 THEN SUM(OVER_TIME)
        ELSE NULL
      END AS TOTAL_OVER_TIME
    FROM
      (SELECT
         EMP_ID,
         OVER_TIME,
         ATND_NO,
         ROW_NUMBER() OVER (PARTITION BY EMP_ID ORDER BY ATND_NO DESC) as RN
       FROM
         NTP1_DAILY_ATND_MG)
    WHERE
      RN <= 5
    GROUP BY
      EMP_ID
    ]]>
</select>

<select id="getLatestDataByLast5Days_TOTAL_WORK_HOUR" resultMap="last5daysAttendanceResultMapTotalWorkHour">
    <![CDATA[
    SELECT
      EMP_ID,
      CASE
        WHEN COUNT(EMP_ID) >= 5 THEN SUM(WORK_HOUR)
        ELSE NULL
      END AS TOTAL_WORK_HOUR
    FROM
      (SELECT
         EMP_ID,
         WORK_HOUR,
         ATND_NO,
         ROW_NUMBER() OVER (PARTITION BY EMP_ID ORDER BY ATND_NO DESC) as RN
       FROM
         NTP1_DAILY_ATND_MG)
    WHERE
      RN <= 5
    GROUP BY
      EMP_ID
    ]]>
</select>

	<select id="getLatestDataByLast5Days_TOTAL_AEW" resultMap="last5daysAttendanceResultMapTotalAew">
	    <![CDATA[
	    SELECT
	      EMP_ID,
	      CASE
	        WHEN COUNT(EMP_ID) >= 5 THEN SUM(AEW)
	        ELSE NULL
	      END AS TOTAL_AEW
	    FROM
	      (SELECT
	         EMP_ID,
	         AEW,
	         ATND_NO,
	         ROW_NUMBER() OVER (PARTITION BY EMP_ID ORDER BY ATND_NO DESC) as RN
	       FROM
	         NTP1_DAILY_ATND_MG)
	    WHERE
	      RN <= 5
	    GROUP BY
	      EMP_ID
	    ]]>
	</select>

	<select id="getLatestDataByLast5Days_AVG_STATUS" resultMap="last5daysAttendanceResultMapAvgStatus">
	    <![CDATA[
	    SELECT
	      EMP_ID,
	      CASE
	        WHEN COUNT(EMP_ID) >= 5 THEN AVG(STATUS)
	        ELSE NULL
	      END AS AVG_STATUS
	    FROM
	      (SELECT
	         EMP_ID,
	         STATUS,
	         ATND_NO,
	         ROW_NUMBER() OVER (PARTITION BY EMP_ID ORDER BY ATND_NO DESC) as RN
	       FROM
	         NTP1_DAILY_ATND_MG)
	    WHERE
	      RN <= 5
	    GROUP BY
	      EMP_ID
	    ]]>
	</select>

</sqlMap>